import type { InferGetStaticPropsType, GetStaticProps } from "next";
import Head from "next/head";
import { PRICE } from "@prisma/client";
import Header from "./components/Header";
import RestaurantCard from "./components/RestaurantCard";
import RootLayout from "./layout";
import { useEffect, useState } from "react";
import db from "@/app/lib/prismadb";
import { produce } from "immer";

export default function Home({
  restaurants,
}: InferGetStaticPropsType<typeof getStaticProps>) {
  return (
    <RootLayout>
      <Head>
        <title>OpenTable</title>
        <meta name="description" content="Generated by Giddyware" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Header />
        <div className="flex flex-wrap py-3 mt-10 px-36">
          {restaurants?.map((restaurant) => (
            <RestaurantCard key={restaurant.id} restaurant={restaurant} />
          ))}
        </div>
      </main>
    </RootLayout>
  );
}

export const getStaticProps: GetStaticProps<{
  restaurants: IRestaurantSafe[];
}> = async () => {
  const data = await db.restaurant.findMany({
    select: {
      id: true,
      name: true,
      main_image: true,
      cuisine: true,
      location: true,
      slug: true,
      price: true,
    },
  });

  const restaurants = data.map((restaurant) => {
    const draftRestaurant = produce(restaurant, (draft) => {
      // @ts-expect-error
      draft.cuisine.created_at = draft.cuisine.created_at.toISOString();
      // @ts-expect-error
      draft.cuisine.updated_at = draft.cuisine.updated_at.toISOString();
      // @ts-expect-error
      draft.location.created_at = draft.location.created_at.toISOString();
      // @ts-expect-error
      draft.location.updated_at = draft.location.updated_at.toISOString();
    });
    return draftRestaurant;
  });

  return { props: { restaurants } };
};
